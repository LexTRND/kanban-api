### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Board {
  authorId: String
  columns: [Column]
  id: String
  name: String
}

type Column {
  boardId: String
  color: String
  id: String
  name: String
  tasks: [Task]
}

input ColumnInputType {
  color: String
  id: String
  name: String
}

type Mutation {
  createBoard(columns: [ColumnInputType], name: String): Board
  createColumn(boardId: String, color: String!, name: String!): Board
  createSubtask(body: String, status: Status, taskId: String): Subtask!
  createTask(boardId: String, body: String, columnId: String, name: String, subtasks: [SubtaskInputType]): Board!
  deleteBoard(boardId: String!): Board
  deleteColumn(boardId: String, columnId: String): Board
  deleteTask(boardId: String, columnId: String, taskId: String!): Board
  login(email: String!, password: String!): AuthPayload!
  signUp(email: String!, firstName: String!, lastName: String!, password: String!): AuthPayload!
  updateBoard(boardId: String!, columns: [ColumnInputType], newName: String!): Board
  updateColumn(columnId: String!, newName: String!): Column
  updateSubtask(status: Status, subtaskId: String): Subtask
  updateTask(boardId: String, body: String, columnId: String, name: String, subtasks: [SubtaskInputType], taskId: String): Board
  updateUser(email: String!, password: String!): User!
}

type Query {
  board(id: String): Board
  boards: [Board!]
  column(id: String): Column
  columns: [Column!]
  subtask(id: String!): Subtask
  subtasks(taskId: String!): [Subtask!]
  task(id: String!): Task
  tasks: [Task!]
  user(email: String): User
  userBoards: [Board!]
  users: [User]
}

"""Current status for subtask"""
enum Status {
  COMPLETE
  INCOMPLETE
}

"""Additional task for task field"""
type Subtask {
  body: String
  id: String
  status: Status
  taskId: String
}

input SubtaskInputType {
  body: String
  id: String
  status: Status
}

type Task {
  body: String
  columnId: String
  id: String
  name: String
  subtasks: [Subtask]
}

type User {
  boards: [Board]
  email: String
  firstName: String
  id: String
  lastName: String
  password: String
}